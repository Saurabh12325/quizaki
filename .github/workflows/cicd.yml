name: CICD
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build Project
        run: mvn clean install -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/quizaki:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/quizaki:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/quizaki:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/quizaki:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/quizaki:latest

  deploy:
    needs: build
    runs-on: [self-hosted]  # self-hosted runner on your EC2
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "SPRING_DATA_MONGODB_URI=${{ secrets.SPRING_DATA_MONGODB_URI }}" >> .env
          echo "EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}" >> .env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env

      - name: Deploy with Docker Compose
        run: |
          sudo docker compose --env-file .env down
          sudo docker compose --env-file .env up -d --build
# f
